AWSTemplateFormatVersion: 2010-09-09
Description: Organization SNS Topic For Tag NonCompliance Stack
Resources:
  SNSTopicForAllAccounts:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: "SNSTopicForTagNonComplianceAlerts"
      Subscription:
        - Endpoint: "shnc@capgroup.com"
          Protocol: email
  SNSTopicAccessPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: SNSTopicAccessPolicy
        Version: 2008-10-17
        Statement:
          - Sid: SNS-Full-Access-To-Master-Account
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'SNS:Publish'
              - 'SNS:RemovePermission'
              - 'SNS:SetTopicAttributes'
              - 'SNS:DeleteTopic'
              - 'SNS:ListSubscriptionsByTopic'
              - 'SNS:GetTopicAttributes'
              - 'SNS:Receive'
              - 'SNS:AddPermission'
              - 'SNS:Subscribe'
            Resource: !Ref 'SNSTopicForAllAccounts'
            Condition:
              StringEquals:
                'AWS:SourceOwner': '848721808596'
          - Sid: Publish-Access-to-member-accounts
            Effect: Allow
            Principal:
              AWS:
                - 'arn:aws:iam::009379620763:root'
                - 'arn:aws:iam::172489534094:root'
                - 'arn:aws:iam::775473764191:root'
                - 'arn:aws:iam::570744012070:root'
                - 'arn:aws:iam::671503490865:root'
                - 'arn:aws:iam::204311517376:root'
                - 'arn:aws:iam::072642321811:root'
                - 'arn:aws:iam::050843294547:root'
                - 'arn:aws:iam::801535644321:root'
                - 'arn:aws:iam::348521753090:root'
                - 'arn:aws:iam::279644747924:root'
                - 'arn:aws:iam::903921672561:root'
                - 'arn:aws:iam::067923858542:root'
                - 'arn:aws:iam::352100175020:root'
                - 'arn:aws:iam::834790116866:root'
                - 'arn:aws:iam::571524409385:root'
                - 'arn:aws:iam::111417557820:root'
                - 'arn:aws:iam::114553513249:root'
                - 'arn:aws:iam::836816519470:root'
                - 'arn:aws:iam::848721808596:root'
                - 'arn:aws:iam::603570012253:root'
                - 'arn:aws:iam::410997643304:root'
                - 'arn:aws:iam::701574795827:root'
                - 'arn:aws:iam::893373391538:root'
                - 'arn:aws:iam::982354747870:root'
                - 'arn:aws:iam::932860924500:root'
                - 'arn:aws:iam::722040131252:root'
                - 'arn:aws:iam::460962125267:root'
                - 'arn:aws:iam::210961756523:root'
                - 'arn:aws:iam::942153875752:root'
                - 'arn:aws:iam::436087206131:root'
                - 'arn:aws:iam::224289327053:root'
                - 'arn:aws:iam::185662892141:root'
                - 'arn:aws:iam::328097608792:root'
                - 'arn:aws:iam::084375698293:root'
                - 'arn:aws:iam::011728106311:root'
                - 'arn:aws:iam::262608454323:root'
                - 'arn:aws:iam::786816582295:root'
                - 'arn:aws:iam::846426870638:root'
                - 'arn:aws:iam::378415543992:root'
                - 'arn:aws:iam::348382413958:root'
                - 'arn:aws:iam::757019876063:root'
                - 'arn:aws:iam::659392342863:root'
            Action: 'SNS:Publish'
            Resource: !Ref 'SNSTopicForAllAccounts'
      Topics:
      - !Ref SNSTopicForAllAccounts
  LFTagSNSTopicAddAcctRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: LFTagSNSTopicPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: 'arn:aws:logs:*:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/lambda/LFTagSNSTopic:*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSNSFullAccess'
  LFTagSNSTopicAddAcct:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Lambda function to add new account to SNS Topic Access Policy
      Handler: index.handler
      Runtime: nodejs8.10
      Role: !GetAtt 
        - LFTagSNSTopicAddAcctRole
        - Arn
      Timeout: 300
      Code:
        ZipFile: |
          var aws = require('aws-sdk');
          var sns = new aws.SNS();

          exports.handler = (event, context, callback) => {
              if (event.serviceEventDetails.createAccountStatus.state === "SUCCEEDED") {
                  console.log("Account creation status:" + event.serviceEventDetails.createAccountStatus.state);
                  console.log("Account Id:" + event.serviceEventDetails.createAccountStatus.accountId);
                  aws.config.update({region: 'us-west-1'});
                  event.accountARN = "arn:aws:iam::" + event.serviceEventDetails.createAccountStatus.accountId + ":root";
                  var params = {
                    AWSAccountId: [
                      event.accountARN
                    ],
                    ActionName: [
                      "Publish"
                    ],
                    Label: 'Publish-access-to-' + event.serviceEventDetails.createAccountStatus.accountId, /* required */
                    TopicArn: 'arn:aws:sns:us-west-1:848721808596:SNSTopicForTagNonComplianceAlerts' /* required */
                  };
                  sns.addPermission(params, function(err, data) {
                    if (err) console.log(err, err.stack); // an error occurred
                    else     console.log(data);           // successful response
                  });
              } else {
                  console.log('Received event:', JSON.stringify(event, null, 2));
                  callback(null,event);
              }

          };
  CWTriggerNewAcctRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: This event will be triggered every time a new account is created and it will in term invoke a lambda function that will update the access policy for the Global SNS Topic that will send out notifications (tag non compliance specifically) across all account.
      EventPattern: 
        source: 
          - "aws.cloudtrail"
        detail-type: 
          - "AWS API Call via CloudTrail"
        detail: 
          eventSource: 
            - "cloudtrail.amazonaws.com"
          eventName:
            - "CreateAccountResult"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "LFTagSNSTopicAddAcct"
              - "Arn"
          Id: "LambdaFunctionV1"
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "LFTagSNSTopicAddAcct"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "CWTriggerNewAcctRule"
          - "Arn"
