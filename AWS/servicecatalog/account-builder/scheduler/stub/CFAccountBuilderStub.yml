AWSTemplateFormatVersion: 2010-09-09
Description: Account Builder Scheduler
Parameters:
  sourcebucket:
    Description: "Source bucket where lambda function zip file is stored."
    Default : na
    Type: String
  SNSRegion:
    Description: "Region where SNS Topic is setup for account alerts"
    Default : us-east-1
    Type: String
  CGPrincipalID:
    Type: String
    Description: Principal ID of the master account.
    Default: 'o-1eax4cor5e'
  SQSRegionName:
    Default: us-east-1
    Type: String
  ProductEmailAlert:
    Type: String
    Description: Email address where SNS notifications will be sent.
    Default: 'shnc@capgroup.com'
  AlertSchedule:
    Default: cron(0/60 * * * ? *)
    Type: String
  SNOWAPIURL:
    Default: na
    Type: String
  SNOWParametersFile:
    Default: na
    Type: String
  ServiceNowCredentials:
    Default: na
    Type: String
  SecretsManagerRegion:
    Default: na
    Type: String
Resources:
  ScheduleCWABStubRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: ServiceCatalog-ScheduleCWABStubRule
      Description: Schedule that runs every hour Sun to Sat invoking lambda to check SQS queue for new messages.
      ScheduleExpression: !Ref AlertSchedule
      State: DISABLED
      Targets:
        - 
          Arn: 
            Fn::GetAtt: 
              - "LFAccountBuilderStub"
              - "Arn"
          Id: "LFAccountBuilderStubDev"
  PermissionForRuleToInvokeLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: 
        Ref: LFAccountBuilderStub
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt: 
          - ScheduleCWABStubRule
          - Arn
  LFAccountBuilderStub:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: ServiceCatalog-LFAccountBuilderStub
      Handler: "LFAccountBuilderStub.lambda_handler"
      Runtime: "python3.8"
      Role: !GetAtt LFAccountBuilderStubRole.Arn
      Environment:
        Variables:
          ACCOUNT_ALERT_SNS_REGION: 
            Ref: SNSRegion
          ACCOUNT_ALERT_SNS_TOPIC_ARN: !Ref SCAccountAlertTopicStub
          ACCOUNT_STATUS_SNS_REGION: 
            Ref: SNSRegion
          ACCOUNT_STATUS_SNS_TOPIC_ARN: !Ref SCAccountStatusTopicStub
          SQSRegionName: !Ref SQSRegionName
          SQSURL: !Ref SCAccountBuilderQueueStub
          SNOW_API_URL: !Ref SNOWAPIURL
          SNOW_PARAMETERS_FILE: !Ref SNOWParametersFile
          SOURCE_BUCKET: !Ref sourcebucket
          ServiceNowCredentials: !Ref ServiceNowCredentials
          SecretsManagerRegionName: !Ref SecretsManagerRegion
      Timeout: 90
      Layers: 
        - arn:aws:lambda:us-east-1:848721808596:layer:http-requests:2
      Code:
        S3Bucket: !Ref sourcebucket
        S3Key: "servicecatalog/account-builder/scheduler/stub/LFAccountBuilderStub.zip"
        S3ObjectVersion: "TfZOukGC3SfR_._ns36IhRDb.yI2usoS"
  LFAccountBuilderStubLG:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: LFAccountBuilderStub
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: LFAccountBuilderStub
      RetentionInDays: 14
  LFAccountBuilderStubRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: ServiceCatalog-LFAccountBuilderStubRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: ServiceCatalog-LFAccountBuilderStubPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/lambda/*:*'
              - Effect: Allow
                Action:
                  - 'sqs:ReceiveMessage'
                  - 'sqs:DeleteMessage'
                  - 'sqs:GetQueueAttributes'
                Resource: !GetAtt 
                  - SCAccountBuilderQueueStub
                  - Arn
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'kms:Decrypt'
                  - 'kms:GenerateDataKey'
                  - 'kms:DescribeKey'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 's3:GetBucketEncryption'
                  - 's3:GetBucketVersioning'
                  - 's3:ListObjectsV2'
                  - 's3:ListObjects'
                  - 's3:ListAllMyBuckets'
                  - 's3:HeadBucket'
                  - 's3:ListBucket'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:ListParts'
                  - 's3:ListMultipartUploadParts'
                Resource:
                  - 'arn:aws:s3:::*/*'
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource:
                  - 'arn:aws:sns:us-east-1:848721808596:SCAccountStatusTopicStub'
                  - 'arn:aws:sns:us-east-1:848721808596:SCAccountAlertTopicStub'
  LFABSendSNSResponseStub:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: ServiceCatalog-LFABSendSNSResponseStub
      Description: This function is the CFN response module 
      Handler: LFABSendSNSResponseStub.lambda_handler
      Role: !GetAtt 
        - LFABSendSNSResponseStubRole
        - Arn
      Runtime: python3.8 
      Layers: 
        - arn:aws:lambda:us-east-1:848721808596:layer:http-requests:2
      Timeout: 30
      Code:
        S3Bucket: !Ref sourcebucket
        S3Key: "servicecatalog/account-builder/scheduler/stub/LFABSendSNSResponseStub.zip"
  LFABSendSNSResponseStubRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ServiceCatalog-LFABSendSNSResponseStubRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: LFABSendSNSResponseStubPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/lambda/*:*'
  LFABSendSNSResponseStubLG:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: LFABSendSNSResponseStub
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: LFABSendSNSResponseStub
      RetentionInDays: 14
  LFABProcessSNSResponseStub:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: ServiceCatalog-LFABProcessSNSResponseStub
      Description: This function is the CFN response module 
      Handler: LFABProcessSNSResponseStub.lambda_handler
      Role: !GetAtt 
        - LFABProcessSNSResponseStubRole
        - Arn
      Runtime: python3.8 
      Layers: 
        - arn:aws:lambda:us-east-1:848721808596:layer:http-requests:2
      Timeout: 30
      Code:
        S3Bucket: !Ref sourcebucket
        S3Key: "servicecatalog/account-builder/scheduler/stub/LFABProcessSNSResponseStub.zip"
  LFABProcessSNSResponseStubRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: ServiceCatalog-LFABProcessSNSResponseStubRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: LFABProcessSNSResponseStubPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/lambda/*:*'
  LFABProcessSNSResponseStubLG:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: LFABProcessSNSResponseStub
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: LFABProcessSNSResponseStub
      RetentionInDays: 14
  SCAccountBuilderTopicStub:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: "SCAccountBuilderTopicStub"
      Subscription:
        - Endpoint: !Ref ProductEmailAlert
          Protocol: email
        - Endpoint: !GetAtt 
            - SCAccountBuilderQueueStub
            - Arn
          Protocol: sqs
        - Endpoint: !GetAtt 
            - LFABSendSNSResponseStub
            - Arn
          Protocol: lambda
  SCAccountStatusTopicStub:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: "SCAccountStatusTopicStub"
      Subscription:
        - Endpoint: !Ref ProductEmailAlert
          Protocol: email
        - Endpoint: !GetAtt 
            - LFABProcessSNSResponseStub
            - Arn
          Protocol: lambda
  SCAccountAlertTopicStub:
    Type: 'AWS::SNS::Topic'
    Properties:
      TopicName: "SCAccountAlertTopicStub"
      Subscription:
        - Endpoint: !Ref ProductEmailAlert
          Protocol: email
  SCAccountBuilderTopicStubPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: SCAccountBuilderTopicStubPolicy
        Version: 2008-10-17
        Statement:
          - Sid: Access-Only-To-Master-Account
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'SNS:Publish'
              - 'SNS:RemovePermission'
              - 'SNS:SetTopicAttributes'
              - 'SNS:DeleteTopic'
              - 'SNS:ListSubscriptionsByTopic'
              - 'SNS:GetTopicAttributes'
              - 'SNS:Receive'
              - 'SNS:AddPermission'
              - 'SNS:Subscribe'
            Resource: !Ref 'SCAccountBuilderTopicStub'
            Condition:
              StringEquals:
                'AWS:SourceOwner': !Ref 'AWS::AccountId'
          - Sid: Publish-Access-to-member-accounts
            Effect: Allow
            Principal:
              AWS: '*'
            Action: 'SNS:Publish'
            Resource: !Ref 'SCAccountBuilderTopicStub'
            Condition:
              StringEquals:
                'aws:PrincipalOrgID': !Ref CGPrincipalID
      Topics:
      - !Ref SCAccountBuilderTopicStub
  SCAccountBuilderQueueStub:
    Type: AWS::SQS::Queue
    Properties: 
      MessageRetentionPeriod: 1209600
      QueueName: ServiceCatalog-AccountBuilderStub-Queue
      ReceiveMessageWaitTimeSeconds: 20
      VisibilityTimeout: 90
  SCAccountBuilderQueueStubPolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 'sqs:SendMessage'
            Resource: '*'
            Condition:
              ArnEquals:
                'aws:SourceArn': !Ref SCAccountBuilderTopicStub
      Queues:
        - !Ref SCAccountBuilderQueueStub