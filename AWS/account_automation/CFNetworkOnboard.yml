AWSTemplateFormatVersion: 2010-09-09
Description: Network Onboarding for a new account
Parameters:
  sourceBucket:
    Default: organization-repo  
    Type: String
  NetworkAnsibleTowerURL:
    Default: https://tower.cguser.capgroup.com/api/v2/job_templates/909/launch/
    Type: String
  SecretsManagerRegion:
    Default: us-east-1
    Type: String
  NetworkServiceAccountCreds:
    Default: IAMAccessCredentials
    Type: String
Resources:
  LFInvokeNetworkTowerAPI:
    Type: 'AWS::Lambda::Function'
    Properties:
      Environment:
        Variables:
          SecretsManagerRegionName: !Ref SecretsManagerRegion
          NetworkServiceAccountCreds: !Ref NetworkServiceAccountCreds
          NETWORK_TOWER_URL: !Ref NetworkAnsibleTowerURL
      Description: This function is the network onboarding module 
      Handler: LFInvokeNetworkTowerAPI.lambda_handler
      Role: !GetAtt 
        - LFInvokeNetworkTowerAPIRole
        - Arn
      Runtime: python3.8 
      Layers: 
        - arn:aws:lambda:us-east-1:848721808596:layer:http-requests:2
      Timeout: 120
      Code:
        S3Bucket: !Ref sourceBucket
        S3Key: "acctautomation/LFInvokeNetworkTowerAPI.zip"
        S3ObjectVersion: "cjL43eHY898mN8Y_Kq_TcdSboFuR0j7d"
      VpcConfig:
        SecurityGroupIds: 
          - sg-029facd71b9750091
        SubnetIds: 
          - subnet-0d16801c03a7f80d9
          - subnet-0e9fb2a1b52350f64 
  LFInvokeNetworkTowerAPIRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: AccountVending-LFInvokeNetworkTowerAPIRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /service-role/
      Policies:
        - PolicyName: LFInvokeNetworkTowerAPIPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/lambda/*:*'
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                  - 'ec2:CreateNetworkInterface'
                  - 'ec2:DescribeNetworkInterfaces'
                  - 'ec2:DeleteNetworkInterface'
                  - 'kms:Decrypt'
                  - 'kms:GenerateDataKey'
                Resource:
                  - '*'
  LFInvokeNetworkTowerAPILG:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: LFInvokeNetworkTowerAPI
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: LFInvokeNetworkTowerAPI
      RetentionInDays: 14

Outputs:
  LFInvokeNetworkTowerAPIArn:
    Value: !GetAtt LFInvokeNetworkTowerAPI.Arn