AWSTemplateFormatVersion: 2010-09-09
Description: Baseline SCP policies for a new account
Parameters:
  sourceBucket:
    Default: na  
    Type: String
  SCPs:
    Default: None
    Type: String
Resources:
  LFApplySCP:
    Type: 'AWS::Lambda::Function'
    Properties:
      Environment:
        Variables:
          SCPs: !Ref SCPs
      Description: This function applies SCPs to the new account. 
      Handler: LFApplyAccountSCP.lambda_handler
      Role: !GetAtt 
        - LFApplySCPRole
        - Arn
      Runtime: python3.8 
      Timeout: 60
      Code:
        S3Bucket: !Ref sourceBucket
        S3Key: "acctautomation/LFApplyAccountSCP.zip"
        S3ObjectVersion: "QL.2R68NgwkCGIWLLltVYLizGQCnKvqM"
  LFApplySCPLG:
    Type: 'AWS::Logs::LogGroup'
    DependsOn: LFApplySCP
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: LFApplySCP
      RetentionInDays: 14
  LFApplySCPRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: AccountVending-LFApplySCPRole
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: LFApplySCPPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'iam:CreateSAMLProvider'
                Resource: '*'
              - Effect: Allow
                Action: 'logs:CreateLogGroup'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:log-group:/aws/lambda/*:*'
              - Sid: AssumeOrgRole
                Effect: Allow
                Action: 'sts:AssumeRole'
                Resource: 'arn:aws:iam::*:role/OrganizationAccountAccessRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
      - 'arn:aws:iam::aws:policy/AWSOrganizationsFullAccess'

Outputs:
  LFApplySCPArn:
    Value: !GetAtt LFApplySCP.Arn