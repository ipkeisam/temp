---
 
###############
#
# Playbook to expand or contract docker storage for Openshift Container Platform in AWS. 
# To be run on bastion host only
#  
# Resizes docker storage by replacing with new disk for App Nodes
# Instruction:  
#    Please define proper resource type for variable:  openshift_aws_resource_type
#    To run:
#      1. Source AWS credentials ( make sure that it corresponds to the account and environment that is being worked on)
#      2. Run playbook: ansible-playbook -i <inventory cfg file> -e "host_name=<app hostname> env_var_file=<env specific vars> new_vol_size=<new volume size> os_device_name=<i.e nvme1n1>" day2_ocp_expand_docker_volume.yml -vvv 
#
# extra-vars options 
#  --------------------------------------------------------------------------------------------------------------------
#  |  variable name           |       value                 |    require or optionanl   |     comments
#  --------------------------------------------------------------------------------------------------------------------
#  | host_name                | node name  ( oc get node )  |    require                | ex. ip-10-244-80-218.us-west-1.compute.internal
#  ---------------------------------------------------------------------------------------------------------------------
#  | env_var_file             | env specif var file         |    require                | located under roles/openshift/vars/
#  ---------------------------------------------------------------------------------------------------------------------
#  | new_vol_size             | numerical value in GB       |    require                | ex. 150   
#  ---------------------------------------------------------------------------------------------------------------------
#  | os_device_name           | OS ref block name ( lsblk ) |    require                | ex. nvme2n1  xvdd  
#  -------------------------------------------------------------------------------------------------------------------
#  | device_name              | AWS ref block device name   |    optional               | ex. /dev/sdb 
#  --------------------------------------------------------------------------------------------------------------------
#  | replace_disk             | true or false               |    optional               | default is true  
#  ---------------------------------------------------------------------------------------------------------------------
#
#  LastUpdated: 2018-10-23
#  UpdatedBy: Cuong Tong ( cuot@capgroup.com )
#

- hosts: masters[0]
  gather_facts: no

  tasks:
  - fail:
      msg: "{{ item }} needs to be defined"
    when: item not in vars
    with_items:
    - new_vol_size
    - host_name
    - env_var_file
    - os_device_name

  - name: Evacuating of pods on "{{ host_name }}" node 
    command: oc adm manage-node "{{ host_name }}" --schedulable=false

  - name: confirm to continue
    pause: prompt='Please confirm to continue with draining of nodes! Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: Draining "{{ host_name }}" node 
    command: oc adm drain "{{ host_name }}" --ignore-daemonsets --delete-local-data

  - name: confirm to continue
    pause: prompt='Please confirm nodes are all drain before continuing! Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: Stopping atomic-openshift-node service
    command: systemctl stop docker atomic-openshift-node
    delegate_to: "{{ host_name }}"
 
  - name: set new_disk variable
    set_fact: 
      new_disk: "{{ replace_disk | default(True) | bool }}"
    delegate_to: localhost

  - name: confirm to continue
    pause: prompt='Please confirm to continue with expanding of docker volume! Press return to continue. Press Ctrl+c and then "a" to abort'
    delegate_to: localhost

  - name: Include env var file to be use 
    include_vars: roles/openshift/vars/{{ env_var_file }}
    delegate_to: localhost

  - name: Name of env var file
    debug: var=env_var_file
    delegate_to: localhost

  # add extra ebs volume to OCP instances
  - name: detaching and creating new volume
    include_role:
      name: openshift
#     due to bug in version 2.4 vars_from does not work, use include_vars instead      
#      vars_from: "{{ env_var_file }}"
      tasks_from: expand_docker_volume.yml
    vars:
      openshift_instance_name: "{{ host_name }}"
      openshift_aws_resource_type: "{{ aws_apphost_type }}"     
    delegate_to: localhost

- hosts: "{{ host_name }}"
  gather_facts: no
  become: root

  tasks: 
  - name: include env file 
    include_vars: roles/openshift/vars/{{ env_var_file }}

  - name: replacing disk is set to {{ replace_disk }}
    set_fact: 
      new_disk: "{{ replace_disk | default(True) | bool }}"

  - name: confirm to continue
    pause: prompt='Please REBOOT {{ host_name }} before continuing! Press return to continue. Press Ctrl+c and then "a" to abort'
    when: new_disk

  - name: confirm to continue
    pause: prompt='Please confirm instance is up and block device name before continuing! Press return to continue. Press Ctrl+c and then "a" to abort'
    when: new_disk

  - name: stop docker and atomic-openshift-node service
    command: systemctl stop docker atomic-openshift-node        
    when: new_disk

  # pause for 10 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 10
    when: new_disk

  - name: set block device name
    set_fact:
      blk_device_name: /dev/{{ os_device_name }}

  - name: remove logical volume if exists 
    shell: lvremove -f /dev/docker-vg/docker-pool
    ignore_errors: true
    when: new_disk
      
  - name: remove docker volume group if exists
    shell: vgremove -f docker-vg
    ignore_errors: true
    when: new_disk

  - name: remove physical volume if exists
    shell: pvremove {{ blk_device_name }}
    ignore_errors: true
    when: new_disk

  - name: umount /var/lib/docker/* if exists
    shell: umount /var/lib/docker/*
    ignore_errors: true
    when: new_disk

  - name: confirm to continue
    pause: prompt='Please confirm /var/lib/docker/* are all umounted before continuing! Press return to continue. Press Ctrl+c and then "a" to abort'
    when: new_disk

  - name: cleanup /var/lib/docker
    command: rm -rf /var/lib/docker
    when: new_disk

  - name: remove docker storage options
    lineinfile:
        path: /etc/sysconfig/docker-storage
        state: absent
        regexp: '^DOCKER_STORAGE_OPTIONS'
        backup: no 
    when: new_disk

  - name: add new device to docker volume group
    lineinfile:
      dest: /etc/sysconfig/docker-storage-setup
      regexp: '^DEVS='
      line: "DEVS={{ blk_device_name | join(' ')}}"
    when: not new_disk

  # pause for 5 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 5
    when: new_disk

  - name: create physical volume
    command: pvcreate {{ blk_device_name }}
    when: new_disk

  # pause for 10 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 10
    when: new_disk

  - name: create docker volume group
    command: vgcreate docker-vg {{ blk_device_name }}
    when: new_disk

  # pause for 5 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 5
    when: new_disk

  - name: run docker storage setup
    command: docker-storage-setup

  - name: confirm to continue
    pause: prompt='Please verify docker storage setup was succesful before continuing! Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: start docker 
    command: systemctl start docker 

  # pause for 10 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: check docker status 
    command: systemctl status docker

  # pause for 10 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: start atomic-openshift-node service
    command: systemctl start atomic-openshift-node

  # pause for 10 secs before proceeding 
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: restart atomic-openshift-node service ( weird error with dnsmasq; needs restart )
    command: systemctl restart atomic-openshift-node

  - name: check atomic-openshift-node service status
    command: systemctl status atomic-openshift-node

- hosts: masters[0]
  gather_facts: no

  tasks: 
  - name: re-enable scheduling of node
    command: oc adm manage-node "{{ host_name }}" --schedulable=true

  - name: list pods on node
    command: oc adm manage-node "{{ host_name }}" --list-pods

  - name: describe node
    command: oc describe node "{{ host_name }}"

