---

#
# tasks to create app ec2 instances for DCIP
#

- name: create the app instances
  ec2:
    region: "{{ dcip_aws_region }}"
    key_name: "{{ dcip_aws_ssh_key_name }}"
    instance_type: "{{ dcip_aws_ec2_app_instance_type }}"
    vpc_subnet_id: "{{ item.subnet }}"
    image: "{{ dcip_aws_rootenc_ami }}"
    termination_protection: "{{ dcip_aws_ec2_termination_protection }}"
    group_id: "{{ dcip_aws_app_security_group_id }}"
    user_data: "{{ dcip_aws_ec2_app_user_data }}"
    wait: yes
    count: "{{ item.count }}"
    instance_tags: "{{ dcip_aws_resource_tags }}"
  register: app_hosts
  with_items: "{{ dcip_aws_admin_subnet }}"

- debug:
    msg: "{{ app_hosts }}"

- name: fetch newly created instance
  ec2_instance_facts:
    region: "{{ dcip_aws_region }}"
    filters:
      "tag:app-type": "{{ dcip_aws_resource_type }}"
      instance-state-name: running
      subnet-id: "{{ item.subnet }}"
      availability-zone: "{{ item.az }}"
      instance-id: "{{ app_hosts.results[0].instance_ids }}"
  register: instancesout
  with_items: "{{ dcip_aws_admin_subnet }}"
  retries: 20
  delay: 3
  until: instancesout|length > 0

- debug:
    msg: "{{ instancesout.results[0].instances[0].instance_id }}"

# create data volume and attach to instance
- name: create new volume and attach to instance
  ec2_vol:
    instance: "{{ instancesout.results[0].instances[0].instance_id }}"
    encrypted: true
    tags: "{{ dcip_aws_resource_tags }}"
    kms_key_id: "{{ item.value.kms_key_id }}"
    delete_on_termination: yes
    volume_size: "{{ item.value.volume_size }}"
    volume_type: "{{ item.value.volume_type }}"
    iops: "{{ item.value.volume_iops }}"
    state: present
    device_name: "{{ item.value.device_name }}"
    region: "{{ dcip_aws_region }}"
  with_dict: "{{ dcip_aws_app_instance_data_volume }}"

# the following tasks tags all related resources attached to the instance
- name: tag eth0 network interfaces
  ec2_tag:
    region: "{{ dcip_aws_region}}"
    resource: "{{ item.instances[0].network_interfaces[0].network_interface_id }}"
    state: present
    tags: "{{ dcip_aws_resource_tags }}"
  with_items: "{{ instancesout.results }}"

- name: tag all attached root volume
  ec2_tag:
    region: "{{ dcip_aws_region}}"
    resource: "{{ item.instances[0].block_device_mappings[0].ebs.volume_id }}"
    state: present
    tags: "{{ dcip_aws_resource_tags }}"
  with_items: "{{ instancesout.results }}"
