---
xpressfeed_aws_atm_id: AA00002757
xpressfeed_aws_ppmc_id: "80052"

xpressfeed_aws_database_ec2_user_acct: [ 'computeadmin1', 'computeadmin2', 'sqladmin1', 'sqladmin2' ]
xpressfeed_aws_app_ec2_system_acct: [ 'cyark_rc', 'x_vmast' ]
xpressfeed_aws_app_ec2_user_acct: [ 'computeadmin1', 'computeadmin2', 'mdsadmin1', 'mdsadmin2' ]
xpressfeed_aws_service_now_acct: [ 'aws_svcnow_unix_local_svc' ]

# default instance type to use
xpressfeed_aws_ec2_db_instance_type: c5.2xlarge	
xpressfeed_aws_ec2_app_instance_type: c5.xlarge	

# set by copy_ami.yml
xpressfeed_aws_ami_copy_custom_ami: ''

xpressfeed_aws_wait_for_ssh: True

# termination protection
xpressfeed_aws_ec2_termination_protection: yes

xpressfeed_aws_ec2_db_user_data: ""

# Windows 2012 user data
xpressfeed_aws_ec2_app_user_data: |
  <powershell>
  NET USER computeadmin1 "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "computeadmin1" /add
  NET USER computeadmin2 "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "computeadmin2" /add
  NET USER mdsadmin1 "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "mdsadmin1" /add
  NET USER mdsadmin2 "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "mdsadmin2" /add
  NET USER cyark_rc "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "cyark_rc" /add
  NET USER x_vmast "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "x_vmast" /add
  NET USER sqladmin1 "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "sqladmin1" /add
  NET USER sqladmin2 "AlfaR0meo2" /add
  NET LOCALGROUP "Administrators" "sqladmin2" /add    
  </powershell>

xpressfeed_aws_db_instance_root_volume:
- device_name: /dev/sda1
  volume_size: 200
  volume_type: gp2
  delete_on_termination: True

xpressfeed_aws_controller_instance_root_volume:
- device_name: /dev/sda1
  volume_size: 50
  volume_type: gp2
  delete_on_termination: True

xpressfeed_aws_controller_instance_data_volume:
  d_drive:
    device_name: /dev/sdd
    volume_size: 3000
    volume_type: st1
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"
  e_drive:
    device_name: /dev/sde
    volume_size: 10
    volume_type: gp2
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"

xpressfeed_aws_db_instance_data_volume:
  e_drive:
    device_name: /dev/sde
    volume_size: 50
    volume_type: gp2
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"
  g_drive:
    device_name: /dev/sdg
    volume_size: 5000
    volume_type: st1
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"
  h_drive:
    device_name: /dev/sdh
    volume_size: 250
    volume_type: gp2
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"
  i_drive:
    device_name: /dev/sdi
    volume_size: 250
    volume_type: gp2
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"
  j_drive:
    device_name: /dev/sdj
    volume_size: 250
    volume_type: gp2
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"
  z_drive:
    device_name: /dev/sdz
    volume_size: 1000
    volume_type: gp2
    encrypted: True
    delete_on_termination: True
    kms_key_id: "{{ xpressfeed_aws_volume_kms_key_id }}"

# build the security groups dict
xpressfeed_aws_security_groups:
  app:
    name: "{{ xpressfeed_aws_env_name }}_xpressfeed_app_sg"
    desc: "{{ xpressfeed_aws_env_name }} xpressfeed App SG"
    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
    - proto: tcp
      from_port: 1433
      to_port: 1433
      cidr_ip: 10.0.0.0/8
    - proto: tcp
      from_port: 443
      to_port: 443
      cidr_ip: 0.0.0.0/0
    rules_egress:
    - proto: all
      from_port: 0
      to_port: 65535
      cidr_ip: 0.0.0.0/0
  database:
    name: "{{ xpressfeed_aws_env_name }}_xpressfeed_db_sg"
    desc: "{{ xpressfeed_aws_env_name }} xpressfeed DB SG"
    rules:
    - proto: tcp
      from_port: 1590
      to_port: 1590
      cidr_ip: 10.0.0.0/8
    - proto: tcp
      from_port: 1434
      to_port: 1434
      cidr_ip: 10.0.0.0/8

# default xpressfeed resource tagging
xpressfeed_aws_resource_tags:
  Name: "{{ xpressfeed_aws_resource_type }}"
  usage-id: "{{ xpressfeed_aws_atm_id }}"
  cost-center: ""
  sec-profile: normal
  exp-date: 99-00-9999
  sd-period: na
  p-id: "{{ xpressfeed_aws_ppmc_id }}"
  env-type: "{{ xpressfeed_aws_env_type }}"
  cloud-dependency: cloudonly
  app-type: "{{ xpressfeed_aws_resource_type }}"
  site: aws
