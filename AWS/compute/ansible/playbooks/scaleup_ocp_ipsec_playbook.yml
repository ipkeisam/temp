---
  
##### 
# These playbook is for configuring IPSEC on a new node 
# It should only meant to run as post install of OCP is completed and on control/bastion host
# To run:  ansible-playbook -i < inventory cfg file > scaleup_ocp_ipsec_playbook.yml
# ansible-playbook -i ../ocp-provisioning/ocp-ext-qa-west.cfg scaleup_ocp_ipsec_playbook.yml -e env_var_file=ext_qa_us_west_1.yml
#  Remember to replace <ENV_VAR_FILE> with the appropriate env variable file under vars/
#
#  LastUpdated: 2018-06-06
#  UpdatedBy: Cuong Tong ( cuot@capgroup.com )
#

- hosts: all
  tasks:
  #- name: set global variable file to use throughout the playbook
    #set_fact: 
      #openshift_aws_env_var_file: <ENV_VAR_FILE> 
 
  - name: include env file to work around ansible 2.4 issue
    include_vars: roles/openshift/vars/{{ env_var_file }}

- hosts: new_nodes
  tasks:
  - name: "Update the MTU in the node config"
    lineinfile:
      path: /etc/origin/node/node-config.yaml
      line: '   mtu: {{node_sdn_mtu}}'
      regexp: '^   mtu: [0-9]{1,4}'
      backup: true
    
- hosts: new_nodes
  tasks:
  - name: yum install libreswan
    yum:
      name: libreswan
      state: latest

- hosts: new_nodes
  tasks:
  - name: stop atomic openshift nodes service
    shell: systemctl stop atomic-openshift-node
  
  # pause for 10 secs before proceeding
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: delete OVS bridge
    shell: ovs-vsctl del-br br0

  # pause for 10 secs before proceeding
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: start atomic openshift nodes service
    shell: systemctl start atomic-openshift-node

  # pause for 10 secs before proceeding
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: initialize NSS database 
    shell: ipsec initnss

  # pause for 10 secs before proceeding
  - name: pause a bit before continuing
    pause:
      seconds: 10

  - name: combine node certs into a PKCS12 file
    shell: 'openssl pkcs12 -export -in /etc/origin/node/server.crt -inkey /etc/origin/node/server.key -certfile /etc/origin/node/ca.crt -passout pass: -out /tmp/mypkcs'
  
  - name: Load the generated PKCS#12 file into the NSS database
    shell: 'pk12util -i /tmp/mypkcs -d sql:/etc/ipsec.d -W ""'

  - name: delete the generated PKCS12 file
    file: path='/tmp/mypkcs' state=absent

- hosts: new_nodes
  tasks:
  - name: create openshift cluster config /etc/ipsec.d/openshift-cluster.conf
    include_role:
      name: openshift
      #vars_from: "{{ openshift_aws_env_var_file }}"
      #vars_from: ext_qa_us_west_1.yml
      tasks_from: ipsec_create_copy_cluster_conf.yml
    when: openshift_create_and_copy_cluster_conf

- hosts: localhost
  connection: local
  tasks:
  - name: include env file to work around ansible 2.4 issue
    include_vars: roles/openshift/vars/{{ env_var_file }}

  - name: create private and clear policies 
    include_role:
      name: openshift
      #vars_from: "{{ openshift_aws_env_var_file }}"
      #vars_from: ext_qa_us_west_1.yml
      tasks_from: ipsec_create_policies.yml
    when: openshift_create_policies

- hosts: new_nodes
  tasks:
  - name: copy private and clear policies to /etc/ipsec.d/ directory
    include_role:
      name: openshift
      #vars_from: "{{ openshift_aws_env_var_file }}"
      #vars_from: ext_qa_us_west_1.yml
      tasks_from: ipsec_copy_policies.yml
    when: openshift_copy_policies

  - name: configure iptables
    include_role:
      name: openshift
      #vars_from: "{{ openshift_aws_env_var_file }}"
      #vars_from: ext_qa_us_west_1.yml
      tasks_from: ipsec_configure_iptables.yml
    when: openshift_configure_iptables 

- hosts: nodes
  tasks:
  - name: prompt for user whether to continue or not
    pause: prompt='Please confirm you want to start IPSec! Press return to continue. Press Ctrl+c and then "a" to abort'

- hosts: nodes
  tasks:
  - name: start ipsec on all nodes
    shell: 'systemctl start ipsec'

- hosts: new_nodes
  tasks:
  - name: start ipsec on all new app nodes
    shell: 'systemctl start ipsec'

- hosts: new_nodes
  tasks:
  - name: restart atomic service on all new nodes added to the cluster
    shell: 'systemctl restart atomic-openshift-node.service'

  # pause for 10 secs before proceeding
  - name: pause for 10 seconds
    pause:
      seconds: 10

- hosts: masters[0]
  tasks:
  - name: verify cluster is communicating properly
    shell: 'oc get nodes'  

- hosts: masters[0]
  tasks:
  - name: verify cluster is communicating properly
    shell: 'oc get pods --all-namespaces'  

- hosts: nodes
  tasks:
  - name: prompt for user whether to continue or not
    pause: prompt='Please confirm you want to enable IPSec! Press return to continue. Press Ctrl+c and then "a" to abort'

  - name: enable IPSec on all nodes
    shell: 'systemctl enable ipsec'  

- hosts: new_nodes
  tasks:
  - name: enable IPSec on new_nodes
    shell: 'systemctl enable ipsec'  


