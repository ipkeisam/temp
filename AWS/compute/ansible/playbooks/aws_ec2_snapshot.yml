---
#####
#
# Playbook to create snapshots of EC2 instances
#
# Instruction:
#    To run:
#      1. Run playbook: ansible-playbook -e "device_name=<device name> region=<region> availability_zone=<availability zone>" aws-ec2-snapshot.yml
#
# Example: ansible-playbook -e "device_name=/dev/xvda region=us-west-1 availability_zone=us-west-1a" aws_ec2_snapshot.yml
#
# LastUpdated: 2020-07-20
# UpdatedBy: Randy Liang (randy.liang@capgroup.com)
#
- hosts: localhost
  connection: local
  gather_facts: yes

  vars:
    # device_name: "/dev/xvda"
    region: us-west-1
    # app_type: ocp4-ext-dev-west-master-host
    availability_zone: us-west-1a
    snapshot_id: snap-01ef027f7b8cce760

  tasks:
    - name: Install pip3/boto
      shell: 'yum -y install python3-pip && pip3 install ansible==2.9.9 boto boto3'
      become: yes
      become_method: sudo

    - name: Gather EC2 facts
      ec2_instance_info:
        filters:
          # "tag:Name": ocp4-ext-dev-west-master-host-2
          availability-zone: "{{ availability_zone }}"
          # "tag:app-type": "{{ app_type }}"
          # "tag:cloud-dependency": cloudonly
      when: ansible_version.full >= "2.9.0"
      register: instances

    - name: Print Instance Id
      debug:
        msg: "Instance : {{ item.instance_id }}"
      loop: "{{ instances.instances }}"

    - debug:
        var: instances
        verbosity: 2

    - name: Create Snapshot of volume mounted on device_name attached to instance_id
      ec2_snapshot:
        region: "{{ region }}"
        instance_id: "{{ item.instance_id }}"
        device_name: "{{ item.block_device_mappings.0.device_name }}"
      loop: "{{ instances.instances }}"

    - name: Verify snapshot is created
      ec2_snapshot_info:
        filters:
          snapshot-id: "{{ snapshot_id }}"
      tags:
        - verify